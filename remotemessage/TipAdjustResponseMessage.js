/**
 * Autogenerated by Avro
 * 
 * DO NOT EDIT DIRECTLY
 */

// Prototype.js required
require("prototype");
var remotemessage_Method = require("../remotemessage/Method");
var remotemessage_Message = require("../remotemessage/Message");

  /**
  * @constructor
  */
  TipAdjustResponseMessage = Class.create(remotemessage_Message, {
    /**
    * Initialize the values for this.
    * @private
    */
    initialize: function($super) {
      $super();
      this._class_ = TipAdjustResponseMessage;
      this.setMethod(remotemessage_Method["TIP_ADJUST_RESPONSE"]);
      this.success = undefined;
      this.amount = undefined;
      this.orderId = undefined;
      this.paymentId = undefined;
    },

    /**
    * Set the field value
    * If true the tip adjustment succeeded
    *
    * @param {Boolean} success 
    */
    setSuccess: function(success) {
      this.success = success;
    },

    /**
    * Get the field value
    * If true the tip adjustment succeeded
      * @return {Boolean} 
    */
    getSuccess: function() {
      return this.success;
    },

    /**
    * Set the field value
    * Amount of tip
    *
    * @param {Number} amount must be a long integer
    */
    setAmount: function(amount) {
      this.amount = amount;
    },

    /**
    * Get the field value
    * Amount of tip
      * @return {Number} must be a long integer
    */
    getAmount: function() {
      return this.amount;
    },

    /**
    * Set the field value
    * Unique identifier for a order
    *
    * @param {String} orderId 
    */
    setOrderId: function(orderId) {
      this.orderId = orderId;
    },

    /**
    * Get the field value
    * Unique identifier for a order
      * @return {String} 
    */
    getOrderId: function() {
      return this.orderId;
    },

    /**
    * Set the field value
    * Unique identifier for a payment
    *
    * @param {String} paymentId 
    */
    setPaymentId: function(paymentId) {
      this.paymentId = paymentId;
    },

    /**
    * Get the field value
    * Unique identifier for a payment
      * @return {String} 
    */
    getPaymentId: function() {
      return this.paymentId;
    }
  });

TipAdjustResponseMessage._meta_ =  {fields:  {}};
TipAdjustResponseMessage._meta_.fields["success"] = {};
TipAdjustResponseMessage._meta_.fields["success"].type = Boolean;
TipAdjustResponseMessage._meta_.fields["amount"] = {};
TipAdjustResponseMessage._meta_.fields["amount"].type = Number;
TipAdjustResponseMessage._meta_.fields["orderId"] = {};
TipAdjustResponseMessage._meta_.fields["orderId"].type = String;
TipAdjustResponseMessage._meta_.fields["paymentId"] = {};
TipAdjustResponseMessage._meta_.fields["paymentId"].type = String;

//
// Expose the module.
//
if ('undefined' !== typeof module) {
module.exports = TipAdjustResponseMessage;
}

