/**
 * Autogenerated by Avro
 * 
 * DO NOT EDIT DIRECTLY
 */

// Prototype.js required
require("prototype");
var remotemessage_Method = require("../remotemessage/Method");
var order_operation_DiscountsAddedOperation = require("../order/operation/DiscountsAddedOperation");
var order_operation_OrderDeletedOperation = require("../order/operation/OrderDeletedOperation");
var remotemessage_Message = require("../remotemessage/Message");
var order_operation_LineItemsAddedOperation = require("../order/operation/LineItemsAddedOperation");
var order_operation_LineItemsDeletedOperation = require("../order/operation/LineItemsDeletedOperation");
var order_DisplayOrder = require("../order/DisplayOrder");
var order_operation_DiscountsDeletedOperation = require("../order/operation/DiscountsDeletedOperation");

  /**
  * @constructor
  */
  OrderUpdateMessage = Class.create(remotemessage_Message, {
    /**
    * Initialize the values for this.
    * @private
    */
    initialize: function($super) {
      $super();
      this._class_ = OrderUpdateMessage;
      this.setMethod(remotemessage_Method["SHOW_ORDER_SCREEN"]);
      this.order = undefined;
      this.lineItemsAddedOperation = undefined;
      this.lineItemsDeletedOperation = undefined;
      this.discountsAddedOperation = undefined;
      this.discountsDeletedOperation = undefined;
      this.orderDeletedOperation = undefined;
    },

    /**
    * Set the field value
    * The order that is to be displayed.
    *
    * @param {DisplayOrder} order 
    */
    setOrder: function(order) {
      this.order = order;
    },

    /**
    * Get the field value
    * The order that is to be displayed.
      * @return {DisplayOrder} 
    */
    getOrder: function() {
      return this.order;
    },

    /**
    * Set the field value
    * Items that were added to the display order.
    *
    * @param {LineItemsAddedOperation} lineItemsAddedOperation 
    */
    setLineItemsAddedOperation: function(lineItemsAddedOperation) {
      this.lineItemsAddedOperation = lineItemsAddedOperation;
    },

    /**
    * Get the field value
    * Items that were added to the display order.
      * @return {LineItemsAddedOperation} 
    */
    getLineItemsAddedOperation: function() {
      return this.lineItemsAddedOperation;
    },

    /**
    * Set the field value
    * Items that were added to the display order.
    *
    * @param {LineItemsDeletedOperation} lineItemsDeletedOperation 
    */
    setLineItemsDeletedOperation: function(lineItemsDeletedOperation) {
      this.lineItemsDeletedOperation = lineItemsDeletedOperation;
    },

    /**
    * Get the field value
    * Items that were added to the display order.
      * @return {LineItemsDeletedOperation} 
    */
    getLineItemsDeletedOperation: function() {
      return this.lineItemsDeletedOperation;
    },

    /**
    * Set the field value
    * Items that were added to the display order.
    *
    * @param {DiscountsAddedOperation} discountsAddedOperation 
    */
    setDiscountsAddedOperation: function(discountsAddedOperation) {
      this.discountsAddedOperation = discountsAddedOperation;
    },

    /**
    * Get the field value
    * Items that were added to the display order.
      * @return {DiscountsAddedOperation} 
    */
    getDiscountsAddedOperation: function() {
      return this.discountsAddedOperation;
    },

    /**
    * Set the field value
    * Items that were added to the display order.
    *
    * @param {DiscountsDeletedOperation} discountsDeletedOperation 
    */
    setDiscountsDeletedOperation: function(discountsDeletedOperation) {
      this.discountsDeletedOperation = discountsDeletedOperation;
    },

    /**
    * Get the field value
    * Items that were added to the display order.
      * @return {DiscountsDeletedOperation} 
    */
    getDiscountsDeletedOperation: function() {
      return this.discountsDeletedOperation;
    },

    /**
    * Set the field value
    * Items that were added to the display order.
    *
    * @param {OrderDeletedOperation} orderDeletedOperation 
    */
    setOrderDeletedOperation: function(orderDeletedOperation) {
      this.orderDeletedOperation = orderDeletedOperation;
    },

    /**
    * Get the field value
    * Items that were added to the display order.
      * @return {OrderDeletedOperation} 
    */
    getOrderDeletedOperation: function() {
      return this.orderDeletedOperation;
    }
  });

OrderUpdateMessage._meta_ =  {fields:  {}};
OrderUpdateMessage._meta_.fields["order"] = {};
OrderUpdateMessage._meta_.fields["order"].type = order_DisplayOrder;
OrderUpdateMessage._meta_.fields["lineItemsAddedOperation"] = {};
OrderUpdateMessage._meta_.fields["lineItemsAddedOperation"].type = order_operation_LineItemsAddedOperation;
OrderUpdateMessage._meta_.fields["lineItemsDeletedOperation"] = {};
OrderUpdateMessage._meta_.fields["lineItemsDeletedOperation"].type = order_operation_LineItemsDeletedOperation;
OrderUpdateMessage._meta_.fields["discountsAddedOperation"] = {};
OrderUpdateMessage._meta_.fields["discountsAddedOperation"].type = order_operation_DiscountsAddedOperation;
OrderUpdateMessage._meta_.fields["discountsDeletedOperation"] = {};
OrderUpdateMessage._meta_.fields["discountsDeletedOperation"].type = order_operation_DiscountsDeletedOperation;
OrderUpdateMessage._meta_.fields["orderDeletedOperation"] = {};
OrderUpdateMessage._meta_.fields["orderDeletedOperation"].type = order_operation_OrderDeletedOperation;

//
// Expose the module.
//
if ('undefined' !== typeof module) {
module.exports = OrderUpdateMessage;
}

