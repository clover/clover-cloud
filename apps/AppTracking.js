/**
 * Autogenerated by Avro
 * 
 * DO NOT EDIT DIRECTLY
 */

var Class = require("../Class.js");

/** Used to track the origin of a distributed call. */
  /**
  * @constructor
  * @memberof apps
  */
  AppTracking = Class.create( {
    /**
    * Initialize the values for this.
    * @memberof apps.AppTracking
    * @private
    */
    initialize: function() {
      this._class_ = AppTracking;
      this.applicationID = undefined;
      this.sourceSDK = undefined;
    },

    /**
    * Set the field value
    * A string representing an application and version.  The format is 'applicationID:semanticversion'.  See http://semver.org/
    *
    * @memberof apps.AppTracking
    * @param {String} applicationID 
    */
    setApplicationID: function(applicationID) {
      this.applicationID = applicationID;
    },

    /**
    * Get the field value
    * A string representing an application and version.  The format is 'applicationID:semanticversion'.  See http://semver.org/
    * @memberof apps.AppTracking
    * @return {String} 
    */
    getApplicationID: function() {
      return this.applicationID;
    },

    /**
    * Set the field value
    * A string representing a SDK and version.  The format is 'SDK_ID:semanticversion'.  See http://semver.org/
    *
    * @memberof apps.AppTracking
    * @param {String} sourceSDK 
    */
    setSourceSDK: function(sourceSDK) {
      this.sourceSDK = sourceSDK;
    },

    /**
    * Get the field value
    * A string representing a SDK and version.  The format is 'SDK_ID:semanticversion'.  See http://semver.org/
    * @memberof apps.AppTracking
    * @return {String} 
    */
    getSourceSDK: function() {
      return this.sourceSDK;
    },

    /**
    * @memberof apps.AppTracking
    * @private
    */
    getMetaInfo: function(fieldName) {
      var curclass = this._class_;
      do {
        var fieldMetaInfo = curclass._meta_.fields[fieldName];
        if(fieldMetaInfo) {
          return fieldMetaInfo;
        }
        curclass = curclass.superclass;
      } while(curclass);
      return null;
    },

    toString: function() {
      return JSON.stringify(this);
    }

  });

AppTracking._meta_ =  {fields:  {}};
AppTracking._meta_.fields["applicationID"] = {};
AppTracking._meta_.fields["applicationID"].type = String;
AppTracking._meta_.fields["sourceSDK"] = {};
AppTracking._meta_.fields["sourceSDK"].type = String;

//
// Expose the module.
//
if ('undefined' !== typeof module) {
module.exports = AppTracking;
}

