/**
 * Autogenerated by Avro
 * 
 * DO NOT EDIT DIRECTLY
 */

// Prototype.js required
require("prototype");

  /**
  * @constructor
  */
  DeviceInfo = Class.create( {
    /**
    * Initialize the values for this.
    * @private
    */
    initialize: function() {
      this._class_ = DeviceInfo;
      this.name = undefined;
      this.model = undefined;
      this.serial = undefined;
    },

    /**
    * Set the field value
    * Name of the device (if entered)
    *
    * @param {String} name 
    */
    setName: function(name) {
      this.name = name;
    },

    /**
    * Get the field value
    * Name of the device (if entered)
      * @return {String} 
    */
    getName: function() {
      return this.name;
    },

    /**
    * Set the field value
    * @param {String} model 
    */
    setModel: function(model) {
      this.model = model;
    },

    /**
    * Get the field value
    * @return {String} 
    */
    getModel: function() {
      return this.model;
    },

    /**
    * Set the field value
    * @param {String} serial 
    */
    setSerial: function(serial) {
      this.serial = serial;
    },

    /**
    * Get the field value
    * @return {String} 
    */
    getSerial: function() {
      return this.serial;
    },
    getMetaInfo: function(fieldName) {
      var curclass = this._class_;
      do {
        var fieldMetaInfo = curclass._meta_.fields[fieldName];
        if(fieldMetaInfo) {
          return fieldMetaInfo;
        }
        curclass = curclass.superclass;
      } while(curclass);
      return null;
    },

    toString: function() {
      return JSON.stringify(this);
    }

  });

DeviceInfo._meta_ =  {fields:  {}};
DeviceInfo._meta_.fields["name"] = {};
DeviceInfo._meta_.fields["name"].type = String;
DeviceInfo._meta_.fields["model"] = {};
DeviceInfo._meta_.fields["model"].type = String;
DeviceInfo._meta_.fields["serial"] = {};
DeviceInfo._meta_.fields["serial"].type = String;

//
// Expose the module.
//
if ('undefined' !== typeof module) {
module.exports = DeviceInfo;
}

