/**
 * Autogenerated by Avro
 * 
 * DO NOT EDIT DIRECTLY
 */

// Prototype.js required
require("prototype");
var remotepay_BaseResponse = require("../remotepay/BaseResponse");

  /**
  * @constructor
  */
  TipAdjustAuthResponse = Class.create(remotepay_BaseResponse, {
    /**
    * Initialize the values for this.
    * @private
    */
    initialize: function($super) {
      $super();
      this._class_ = TipAdjustAuthResponse;
      this.tipAmount = undefined;
      this.paymentId = undefined;
    },

    /**
    * Set the field value
    * Amount of tip
    *
    * @param {Number} tipAmount must be a long integer
    */
    setTipAmount: function(tipAmount) {
      this.tipAmount = tipAmount;
    },

    /**
    * Get the field value
    * Amount of tip
      * @return {Number} must be a long integer
    */
    getTipAmount: function() {
      return this.tipAmount;
    },

    /**
    * Set the field value
    * Unique identifier for a payment
    *
    * @param {String} paymentId 
    */
    setPaymentId: function(paymentId) {
      this.paymentId = paymentId;
    },

    /**
    * Get the field value
    * Unique identifier for a payment
      * @return {String} 
    */
    getPaymentId: function() {
      return this.paymentId;
    }
  });

TipAdjustAuthResponse._meta_ =  {fields:  {}};
TipAdjustAuthResponse._meta_.fields["tipAmount"] = {};
TipAdjustAuthResponse._meta_.fields["tipAmount"].type = Number;
TipAdjustAuthResponse._meta_.fields["paymentId"] = {};
TipAdjustAuthResponse._meta_.fields["paymentId"].type = String;

//
// Expose the module.
//
if ('undefined' !== typeof module) {
module.exports = TipAdjustAuthResponse;
}

