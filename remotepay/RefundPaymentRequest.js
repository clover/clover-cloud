/**
 * Autogenerated by Avro
 * 
 * DO NOT EDIT DIRECTLY
 */

// Prototype.js required
require("prototype");
var remotepay_BaseRequest = require("../remotepay/BaseRequest");

  /**
  * @constructor
  */
  RefundPaymentRequest = Class.create(remotepay_BaseRequest, {
    /**
    * Initialize the values for this.
    * @private
    */
    initialize: function($super) {
      $super();
      this._class_ = RefundPaymentRequest;
      this.fullRefund = undefined;
      this.amount = undefined;
      this.orderId = undefined;
      this.paymentId = undefined;
    },

    /**
    * Set the field value
    * If true, then it is a full refund.  The amount will be ignored.
    *
    * @param {Boolean} fullRefund 
    */
    setFullRefund: function(fullRefund) {
      this.fullRefund = fullRefund;
    },

    /**
    * Get the field value
    * If true, then it is a full refund.  The amount will be ignored.
      * @return {Boolean} 
    */
    getFullRefund: function() {
      return this.fullRefund;
    },

    /**
    * Set the field value
    * Amount to be refunded
    *
    * @param {Number|Null} amount must be a long integer, 
    */
    setAmount: function(amount) {
      this.amount = amount;
    },

    /**
    * Get the field value
    * Amount to be refunded
      * @return {Number|Null} must be a long integer, 
    */
    getAmount: function() {
      return this.amount;
    },

    /**
    * Set the field value
    * Unique identifier
    *
    * @param {String} orderId 
    */
    setOrderId: function(orderId) {
      this.orderId = orderId;
    },

    /**
    * Get the field value
    * Unique identifier
      * @return {String} 
    */
    getOrderId: function() {
      return this.orderId;
    },

    /**
    * Set the field value
    * Unique identifier
    *
    * @param {String} paymentId 
    */
    setPaymentId: function(paymentId) {
      this.paymentId = paymentId;
    },

    /**
    * Get the field value
    * Unique identifier
      * @return {String} 
    */
    getPaymentId: function() {
      return this.paymentId;
    }
  });

RefundPaymentRequest._meta_ =  {fields:  {}};
RefundPaymentRequest._meta_.fields["fullRefund"] = {};
RefundPaymentRequest._meta_.fields["fullRefund"].type = Boolean;
RefundPaymentRequest._meta_.fields["amount"] = {};
RefundPaymentRequest._meta_.fields["amount"].type = Number;
RefundPaymentRequest._meta_.fields["orderId"] = {};
RefundPaymentRequest._meta_.fields["orderId"].type = String;
RefundPaymentRequest._meta_.fields["paymentId"] = {};
RefundPaymentRequest._meta_.fields["paymentId"].type = String;

//
// Expose the module.
//
if ('undefined' !== typeof module) {
module.exports = RefundPaymentRequest;
}

