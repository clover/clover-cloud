/**
 * Autogenerated by Avro
 * 
 * DO NOT EDIT DIRECTLY
 */

// Prototype.js required
require("prototype");
var remotepay_DeviceInfo = require("../remotepay/DeviceInfo");

  /**
  * @constructor
  */
  MerchantInfo = Class.create( {
    /**
    * Initialize the values for this.
    * @private
    */
    initialize: function() {
      this._class_ = MerchantInfo;
      this.merchantID = undefined;
      this.merchantMID = undefined;
      this.merchantName = undefined;
      this.supportsAuths = true;
      this.supportsPreAuths = true;
      this.supportsSales = true;
      this.supportsVaultCards = true;
      this.supportsManualRefunds = true;
      this.supportsTipAdjust = true;
      this.deviceInfo = undefined;
    },

    /**
    * Set the field value
    * Unique identifier
    *
    * @param {String} merchantID 
    */
    setMerchantID: function(merchantID) {
      this.merchantID = merchantID;
    },

    /**
    * Get the field value
    * Unique identifier
      * @return {String} 
    */
    getMerchantID: function() {
      return this.merchantID;
    },

    /**
    * Set the field value
    * @param {String} merchantMID 
    */
    setMerchantMID: function(merchantMID) {
      this.merchantMID = merchantMID;
    },

    /**
    * Get the field value
    * @return {String} 
    */
    getMerchantMID: function() {
      return this.merchantMID;
    },

    /**
    * Set the field value
    * Name of the merchant
    *
    * @param {String} merchantName 
    */
    setMerchantName: function(merchantName) {
      this.merchantName = merchantName;
    },

    /**
    * Get the field value
    * Name of the merchant
      * @return {String} 
    */
    getMerchantName: function() {
      return this.merchantName;
    },

    /**
    * Set the field value
    * @param {Boolean} supportsAuths 
    */
    setSupportsAuths: function(supportsAuths) {
      this.supportsAuths = supportsAuths;
    },

    /**
    * Get the field value
    * @return {Boolean} 
    */
    getSupportsAuths: function() {
      return this.supportsAuths;
    },

    /**
    * Set the field value
    * @param {Boolean} supportsPreAuths 
    */
    setSupportsPreAuths: function(supportsPreAuths) {
      this.supportsPreAuths = supportsPreAuths;
    },

    /**
    * Get the field value
    * @return {Boolean} 
    */
    getSupportsPreAuths: function() {
      return this.supportsPreAuths;
    },

    /**
    * Set the field value
    * @param {Boolean} supportsSales 
    */
    setSupportsSales: function(supportsSales) {
      this.supportsSales = supportsSales;
    },

    /**
    * Get the field value
    * @return {Boolean} 
    */
    getSupportsSales: function() {
      return this.supportsSales;
    },

    /**
    * Set the field value
    * @param {Boolean} supportsVaultCards 
    */
    setSupportsVaultCards: function(supportsVaultCards) {
      this.supportsVaultCards = supportsVaultCards;
    },

    /**
    * Get the field value
    * @return {Boolean} 
    */
    getSupportsVaultCards: function() {
      return this.supportsVaultCards;
    },

    /**
    * Set the field value
    * @param {Boolean} supportsManualRefunds 
    */
    setSupportsManualRefunds: function(supportsManualRefunds) {
      this.supportsManualRefunds = supportsManualRefunds;
    },

    /**
    * Get the field value
    * @return {Boolean} 
    */
    getSupportsManualRefunds: function() {
      return this.supportsManualRefunds;
    },

    /**
    * Set the field value
    * @param {Boolean} supportsTipAdjust 
    */
    setSupportsTipAdjust: function(supportsTipAdjust) {
      this.supportsTipAdjust = supportsTipAdjust;
    },

    /**
    * Get the field value
    * @return {Boolean} 
    */
    getSupportsTipAdjust: function() {
      return this.supportsTipAdjust;
    },

    /**
    * Set the field value
    * @param {DeviceInfo} deviceInfo 
    */
    setDeviceInfo: function(deviceInfo) {
      this.deviceInfo = deviceInfo;
    },

    /**
    * Get the field value
    * @return {DeviceInfo} 
    */
    getDeviceInfo: function() {
      return this.deviceInfo;
    },
    getMetaInfo: function(fieldName) {
      var curclass = this._class_;
      do {
        var fieldMetaInfo = curclass._meta_.fields[fieldName];
        if(fieldMetaInfo) {
          return fieldMetaInfo;
        }
        curclass = curclass.superclass;
      } while(curclass);
      return null;
    },

    toString: function() {
      return JSON.stringify(this);
    }

  });

MerchantInfo._meta_ =  {fields:  {}};
MerchantInfo._meta_.fields["merchantID"] = {};
MerchantInfo._meta_.fields["merchantID"].type = String;
MerchantInfo._meta_.fields["merchantMID"] = {};
MerchantInfo._meta_.fields["merchantMID"].type = String;
MerchantInfo._meta_.fields["merchantName"] = {};
MerchantInfo._meta_.fields["merchantName"].type = String;
MerchantInfo._meta_.fields["supportsAuths"] = {};
MerchantInfo._meta_.fields["supportsAuths"].type = Boolean;
MerchantInfo._meta_.fields["supportsPreAuths"] = {};
MerchantInfo._meta_.fields["supportsPreAuths"].type = Boolean;
MerchantInfo._meta_.fields["supportsSales"] = {};
MerchantInfo._meta_.fields["supportsSales"].type = Boolean;
MerchantInfo._meta_.fields["supportsVaultCards"] = {};
MerchantInfo._meta_.fields["supportsVaultCards"].type = Boolean;
MerchantInfo._meta_.fields["supportsManualRefunds"] = {};
MerchantInfo._meta_.fields["supportsManualRefunds"].type = Boolean;
MerchantInfo._meta_.fields["supportsTipAdjust"] = {};
MerchantInfo._meta_.fields["supportsTipAdjust"].type = Boolean;
MerchantInfo._meta_.fields["deviceInfo"] = {};
MerchantInfo._meta_.fields["deviceInfo"].type = remotepay_DeviceInfo;

//
// Expose the module.
//
if ('undefined' !== typeof module) {
module.exports = MerchantInfo;
}

