/**
 * Autogenerated by Avro
 * 
 * DO NOT EDIT DIRECTLY
 */

var Class = require("../Class.js");
var base_Points = require("../base/Points");

  /**
  * @constructor
  * @memberof base
  */
  Signature = Class.create( {
    /**
    * Initialize the values for this.
    * @memberof base.Signature
    * @private
    */
    initialize: function() {
      this._class_ = Signature;
      this.strokes = undefined;
    },

    /**
    * Set the field value
    * A series of strokes representing a signature
    *
    * @memberof base.Signature
    * @param {Array.<base.Points>} strokes An array of 
    */
    setStrokes: function(strokes) {
      this.strokes = strokes;
    },

    /**
    * Get the field value
    * A series of strokes representing a signature
    * @memberof base.Signature
    * @return {Array.<base.Points>} An array of 
    */
    getStrokes: function() {
      return this.strokes;
    },

    /**
    * @memberof base.Signature
    * @private
    */
    getMetaInfo: function(fieldName) {
      var curclass = this._class_;
      do {
        var fieldMetaInfo = curclass._meta_.fields[fieldName];
        if(fieldMetaInfo) {
          return fieldMetaInfo;
        }
        curclass = curclass.superclass;
      } while(curclass);
      return null;
    },

    toString: function() {
      return JSON.stringify(this);
    }

  });

Signature._meta_ =  {fields:  {}};
Signature._meta_.fields["strokes"] = {};
Signature._meta_.fields["strokes"].type = Array;
Signature._meta_.fields["strokes"].elementType = base_Points;

//
// Expose the module.
//
if ('undefined' !== typeof module) {
module.exports = Signature;
}

