/**
 * Autogenerated by Avro
 * 
 * DO NOT EDIT DIRECTLY
 */

// Prototype.js required
require("prototype");
var base_Reference = require("../base/Reference");

  /**
  * @constructor
  */
  ItemGroup = Class.create( {
    /**
    * Initialize the values for this.
    * @private
    */
    initialize: function() {
      this._class_ = ItemGroup;
      this.id = undefined;
      this.name = undefined;
      this.items = undefined;
      this.attributes = undefined;
    },

    /**
    * Set the field value
    * Unique identifier
    *
    * @param {String} id 
    */
    setId: function(id) {
      this.id = id;
    },

    /**
    * Get the field value
    * Unique identifier
      * @return {String} 
    */
    getId: function() {
      return this.id;
    },

    /**
    * Set the field value
    * Name of the option
    *
    * @param {String} name 
    */
    setName: function(name) {
      this.name = name;
    },

    /**
    * Get the field value
    * Name of the option
      * @return {String} 
    */
    getName: function() {
      return this.name;
    },

    /**
    * Set the field value
    * Items that are members of this group
    *
    * @param {Array.<Reference>} items An array of 
    */
    setItems: function(items) {
      this.items = items;
    },

    /**
    * Get the field value
    * Items that are members of this group
      * @return {Array.<Reference>} An array of 
    */
    getItems: function() {
      return this.items;
    },

    /**
    * Set the field value
    * Attributes that belong to this group
    *
    * @param {Array.<Reference>} attributes An array of 
    */
    setAttributes: function(attributes) {
      this.attributes = attributes;
    },

    /**
    * Get the field value
    * Attributes that belong to this group
      * @return {Array.<Reference>} An array of 
    */
    getAttributes: function() {
      return this.attributes;
    },
    getMetaInfo: function(fieldName) {
      var curclass = this._class_;
      do {
        var fieldMetaInfo = curclass._meta_.fields[fieldName];
        if(fieldMetaInfo) {
          return fieldMetaInfo;
        }
        curclass = curclass.superclass;
      } while(curclass);
      return null;
    },

    toString: function() {
      return JSON.stringify(this);
    }

  });

ItemGroup._meta_ =  {fields:  {}};
ItemGroup._meta_.fields["id"] = {};
ItemGroup._meta_.fields["id"].type = String;
ItemGroup._meta_.fields["name"] = {};
ItemGroup._meta_.fields["name"].type = String;
ItemGroup._meta_.fields["items"] = {};
ItemGroup._meta_.fields["items"].type = Array;
ItemGroup._meta_.fields["items"].elementType = base_Reference;
ItemGroup._meta_.fields["attributes"] = {};
ItemGroup._meta_.fields["attributes"].type = Array;
ItemGroup._meta_.fields["attributes"].elementType = base_Reference;

//
// Expose the module.
//
if ('undefined' !== typeof module) {
module.exports = ItemGroup;
}

