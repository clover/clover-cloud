/**
 * Autogenerated by Avro
 * 
 * DO NOT EDIT DIRECTLY
 */

// Prototype.js required
require("prototype");
var base_Reference = require("../base/Reference");
var inventory_Option = require("../inventory/Option");

  /**
  * @constructor
  */
  Attribute = Class.create( {
    /**
    * Initialize the values for this.
    * @private
    */
    initialize: function() {
      this._class_ = Attribute;
      this.id = undefined;
      this.name = undefined;
      this.itemGroup = undefined;
      this.options = undefined;
    },

    /**
    * Set the field value
    * Unique identifier
    *
    * @param {String} id 
    */
    setId: function(id) {
      this.id = id;
    },

    /**
    * Get the field value
    * Unique identifier
      * @return {String} 
    */
    getId: function() {
      return this.id;
    },

    /**
    * Set the field value
    * Name of this attribute
    *
    * @param {String} name 
    */
    setName: function(name) {
      this.name = name;
    },

    /**
    * Get the field value
    * Name of this attribute
      * @return {String} 
    */
    getName: function() {
      return this.name;
    },

    /**
    * Set the field value
    * The item group this attribute belongs to
    *
    * @param {Reference} itemGroup 
    */
    setItemGroup: function(itemGroup) {
      this.itemGroup = itemGroup;
    },

    /**
    * Get the field value
    * The item group this attribute belongs to
      * @return {Reference} 
    */
    getItemGroup: function() {
      return this.itemGroup;
    },

    /**
    * Set the field value
    * Options associated with this attribute
    *
    * @param {Array.<Option>} options An array of 
    */
    setOptions: function(options) {
      this.options = options;
    },

    /**
    * Get the field value
    * Options associated with this attribute
      * @return {Array.<Option>} An array of 
    */
    getOptions: function() {
      return this.options;
    },
    getMetaInfo: function(fieldName) {
      var curclass = this._class_;
      do {
        var fieldMetaInfo = curclass._meta_.fields[fieldName];
        if(fieldMetaInfo) {
          return fieldMetaInfo;
        }
        curclass = curclass.superclass;
      } while(curclass);
      return null;
    },

    toString: function() {
      return JSON.stringify(this);
    }

  });

Attribute._meta_ =  {fields:  {}};
Attribute._meta_.fields["id"] = {};
Attribute._meta_.fields["id"].type = String;
Attribute._meta_.fields["name"] = {};
Attribute._meta_.fields["name"].type = String;
Attribute._meta_.fields["itemGroup"] = {};
Attribute._meta_.fields["itemGroup"].type = base_Reference;
Attribute._meta_.fields["options"] = {};
Attribute._meta_.fields["options"].type = Array;
Attribute._meta_.fields["options"].elementType = inventory_Option;

//
// Expose the module.
//
if ('undefined' !== typeof module) {
module.exports = Attribute;
}

