/**
 * Autogenerated by Avro
 * 
 * DO NOT EDIT DIRECTLY
 */

// Prototype.js required
require("prototype");
var base_Reference = require("../base/Reference");

  /**
  * @constructor
  */
  TaxRate = Class.create( {
    /**
    * Initialize the values for this.
    * @private
    */
    initialize: function() {
      this._class_ = TaxRate;
      this.id = undefined;
      this.lineItemRef = undefined;
      this.name = undefined;
      this.rate = undefined;
      this.isDefault = undefined;
      this.items = undefined;
    },

    /**
    * Set the field value
    * @param {String} id 
    */
    setId: function(id) {
      this.id = id;
    },

    /**
    * Get the field value
    * @return {String} 
    */
    getId: function() {
      return this.id;
    },

    /**
    * Set the field value
    * The line item with which the tax rate is associated
    *
    * @param {Reference} lineItemRef 
    */
    setLineItemRef: function(lineItemRef) {
      this.lineItemRef = lineItemRef;
    },

    /**
    * Get the field value
    * The line item with which the tax rate is associated
      * @return {Reference} 
    */
    getLineItemRef: function() {
      return this.lineItemRef;
    },

    /**
    * Set the field value
    * @param {String} name 
    */
    setName: function(name) {
      this.name = name;
    },

    /**
    * Get the field value
    * @return {String} 
    */
    getName: function() {
      return this.name;
    },

    /**
    * Set the field value
    * @param {Number} rate must be a long integer
    */
    setRate: function(rate) {
      this.rate = rate;
    },

    /**
    * Get the field value
    * @return {Number} must be a long integer
    */
    getRate: function() {
      return this.rate;
    },

    /**
    * Set the field value
    * @param {Boolean} isDefault 
    */
    setIsDefault: function(isDefault) {
      this.isDefault = isDefault;
    },

    /**
    * Get the field value
    * @return {Boolean} 
    */
    getIsDefault: function() {
      return this.isDefault;
    },

    /**
    * Set the field value
    * Items associated with this tax rate
    *
    * @param {Array.<Reference>} items An array of 
    */
    setItems: function(items) {
      this.items = items;
    },

    /**
    * Get the field value
    * Items associated with this tax rate
      * @return {Array.<Reference>} An array of 
    */
    getItems: function() {
      return this.items;
    },
    getMetaInfo: function(fieldName) {
      var curclass = this._class_;
      do {
        var fieldMetaInfo = curclass._meta_.fields[fieldName];
        if(fieldMetaInfo) {
          return fieldMetaInfo;
        }
        curclass = curclass.superclass;
      } while(curclass);
      return null;
    },

    toString: function() {
      return JSON.stringify(this);
    }

  });

TaxRate._meta_ =  {fields:  {}};
TaxRate._meta_.fields["id"] = {};
TaxRate._meta_.fields["id"].type = String;
TaxRate._meta_.fields["lineItemRef"] = {};
TaxRate._meta_.fields["lineItemRef"].type = base_Reference;
TaxRate._meta_.fields["name"] = {};
TaxRate._meta_.fields["name"].type = String;
TaxRate._meta_.fields["rate"] = {};
TaxRate._meta_.fields["rate"].type = Number;
TaxRate._meta_.fields["isDefault"] = {};
TaxRate._meta_.fields["isDefault"].type = Boolean;
TaxRate._meta_.fields["items"] = {};
TaxRate._meta_.fields["items"].type = Array;
TaxRate._meta_.fields["items"].elementType = base_Reference;

//
// Expose the module.
//
if ('undefined' !== typeof module) {
module.exports = TaxRate;
}

