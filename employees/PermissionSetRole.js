/**
 * Autogenerated by Avro
 * 
 * DO NOT EDIT DIRECTLY
 */

var Class = require("../Class.js");
var base_Reference = require("../base/Reference");

  /**
  * @constructor
  * @memberof employees
  */
  PermissionSetRole = Class.create( {
    /**
    * Initialize the values for this.
    * @memberof employees.PermissionSetRole
    * @private
    */
    initialize: function() {
      this._class_ = PermissionSetRole;
      this.id = undefined;
      this.role = undefined;
      this.permissionSet = undefined;
      this.modified_time = undefined;
      this.deleted_time = undefined;
    },

    /**
    * Set the field value
    * Unique identifier
    *
    * @memberof employees.PermissionSetRole
    * @param {String} id 
    */
    setId: function(id) {
      this.id = id;
    },

    /**
    * Get the field value
    * Unique identifier
    * @memberof employees.PermissionSetRole
    * @return {String} 
    */
    getId: function() {
      return this.id;
    },

    /**
    * Set the field value
    * The role
    *
    * @memberof employees.PermissionSetRole
    * @param {base.Reference} role 
    */
    setRole: function(role) {
      this.role = role;
    },

    /**
    * Get the field value
    * The role
    * @memberof employees.PermissionSetRole
    * @return {base.Reference} 
    */
    getRole: function() {
      return this.role;
    },

    /**
    * Set the field value
    * The role
    *
    * @memberof employees.PermissionSetRole
    * @param {base.Reference} permissionSet 
    */
    setPermissionSet: function(permissionSet) {
      this.permissionSet = permissionSet;
    },

    /**
    * Get the field value
    * The role
    * @memberof employees.PermissionSetRole
    * @return {base.Reference} 
    */
    getPermissionSet: function() {
      return this.permissionSet;
    },

    /**
    * Set the field value
    * @memberof employees.PermissionSetRole
    * @param {Number} modified_time must be a long integer
    */
    setModifiedTime: function(modified_time) {
      this.modified_time = modified_time;
    },

    /**
    * Get the field value
    * @memberof employees.PermissionSetRole
    * @return {Number} must be a long integer
    */
    getModifiedTime: function() {
      return this.modified_time;
    },

    /**
    * Set the field value
    * @memberof employees.PermissionSetRole
    * @param {Null|Number} deleted_time must be a long integer
    */
    setDeletedTime: function(deleted_time) {
      this.deleted_time = deleted_time;
    },

    /**
    * Get the field value
    * @memberof employees.PermissionSetRole
    * @return {Null|Number} must be a long integer
    */
    getDeletedTime: function() {
      return this.deleted_time;
    },

    /**
    * @memberof employees.PermissionSetRole
    * @private
    */
    getMetaInfo: function(fieldName) {
      var curclass = this._class_;
      do {
        var fieldMetaInfo = curclass._meta_.fields[fieldName];
        if(fieldMetaInfo) {
          return fieldMetaInfo;
        }
        curclass = curclass.superclass;
      } while(curclass);
      return null;
    },

    toString: function() {
      return JSON.stringify(this);
    }

  });

PermissionSetRole._meta_ =  {fields:  {}};
PermissionSetRole._meta_.fields["id"] = {};
PermissionSetRole._meta_.fields["id"].type = String;
PermissionSetRole._meta_.fields["role"] = {};
PermissionSetRole._meta_.fields["role"].type = base_Reference;
PermissionSetRole._meta_.fields["permissionSet"] = {};
PermissionSetRole._meta_.fields["permissionSet"].type = base_Reference;
PermissionSetRole._meta_.fields["modified_time"] = {};
PermissionSetRole._meta_.fields["modified_time"].type = Number;
PermissionSetRole._meta_.fields["deleted_time"] = {};
PermissionSetRole._meta_.fields["deleted_time"].type = Number;

//
// Expose the module.
//
if ('undefined' !== typeof module) {
module.exports = PermissionSetRole;
}

