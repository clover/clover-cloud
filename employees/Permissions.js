/**
 * Autogenerated by Avro
 * 
 * DO NOT EDIT DIRECTLY
 */

var Class = require("../Class.js");
var employees_Permission = require("../employees/Permission");

  /**
  * @constructor
  * @memberof employees
  */
  Permissions = Class.create( {
    /**
    * Initialize the values for this.
    * @memberof employees.Permissions
    * @private
    */
    initialize: function() {
      this._class_ = Permissions;
      this.id = undefined;
      this.bits = undefined;
      this.readablePermissions = undefined;
    },

    /**
    * Set the field value
    * Unique identifier
    *
    * @memberof employees.Permissions
    * @param {String} id 
    */
    setId: function(id) {
      this.id = id;
    },

    /**
    * Get the field value
    * Unique identifier
    * @memberof employees.Permissions
    * @return {String} 
    */
    getId: function() {
      return this.id;
    },

    /**
    * Set the field value
    * A bitmap representing the permissions
    *
    * @memberof employees.Permissions
    * @param {Number} bits must be a long integer
    */
    setBits: function(bits) {
      this.bits = bits;
    },

    /**
    * Get the field value
    * A bitmap representing the permissions
    * @memberof employees.Permissions
    * @return {Number} must be a long integer
    */
    getBits: function() {
      return this.bits;
    },

    /**
    * Set the field value
    * A readable list of permissions
    *
    * @memberof employees.Permissions
    * @param {Array.<employees.Permission>} readablePermissions An array of 
    */
    setReadablePermissions: function(readablePermissions) {
      this.readablePermissions = readablePermissions;
    },

    /**
    * Get the field value
    * A readable list of permissions
    * @memberof employees.Permissions
    * @return {Array.<employees.Permission>} An array of 
    */
    getReadablePermissions: function() {
      return this.readablePermissions;
    },

    /**
    * @memberof employees.Permissions
    * @private
    */
    getMetaInfo: function(fieldName) {
      var curclass = this._class_;
      do {
        var fieldMetaInfo = curclass._meta_.fields[fieldName];
        if(fieldMetaInfo) {
          return fieldMetaInfo;
        }
        curclass = curclass.superclass;
      } while(curclass);
      return null;
    },

    toString: function() {
      return JSON.stringify(this);
    }

  });

Permissions._meta_ =  {fields:  {}};
Permissions._meta_.fields["id"] = {};
Permissions._meta_.fields["id"].type = String;
Permissions._meta_.fields["bits"] = {};
Permissions._meta_.fields["bits"].type = Number;
Permissions._meta_.fields["readablePermissions"] = {};
Permissions._meta_.fields["readablePermissions"].type = Array;
Permissions._meta_.fields["readablePermissions"].elementType = employees_Permission;

//
// Expose the module.
//
if ('undefined' !== typeof module) {
module.exports = Permissions;
}

