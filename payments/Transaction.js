/**
 * Autogenerated by Avro
 * 
 * DO NOT EDIT DIRECTLY
 */

// Prototype.js required
require("prototype");
var payments_Payment = require("../payments/Payment");
var payments_Refund = require("../payments/Refund");
var payments_Credit = require("../payments/Credit");

  /**
  * @constructor
  */
  Transaction = Class.create( {
    /**
    * Initialize the values for this.
    * @private
    */
    initialize: function() {
      this._class_ = Transaction;
      this.createdTime = undefined;
      this.clientCreatedTime = undefined;
      this.payment = undefined;
      this.refund = undefined;
      this.credit = undefined;
    },

    /**
    * Set the field value
    * The time when the transaction was recorded on the server
    *
    * @param {Number} createdTime must be a long integer
    */
    setCreatedTime: function(createdTime) {
      this.createdTime = createdTime;
    },

    /**
    * Get the field value
    * The time when the transaction was recorded on the server
      * @return {Number} must be a long integer
    */
    getCreatedTime: function() {
      return this.createdTime;
    },

    /**
    * Set the field value
    * The time when the transaction was recorded on the client
    *
    * @param {Number} clientCreatedTime must be a long integer
    */
    setClientCreatedTime: function(clientCreatedTime) {
      this.clientCreatedTime = clientCreatedTime;
    },

    /**
    * Get the field value
    * The time when the transaction was recorded on the client
      * @return {Number} must be a long integer
    */
    getClientCreatedTime: function() {
      return this.clientCreatedTime;
    },

    /**
    * Set the field value
    * @param {Payment} payment 
    */
    setPayment: function(payment) {
      this.payment = payment;
    },

    /**
    * Get the field value
    * @return {Payment} 
    */
    getPayment: function() {
      return this.payment;
    },

    /**
    * Set the field value
    * @param {Refund} refund 
    */
    setRefund: function(refund) {
      this.refund = refund;
    },

    /**
    * Get the field value
    * @return {Refund} 
    */
    getRefund: function() {
      return this.refund;
    },

    /**
    * Set the field value
    * @param {Credit} credit 
    */
    setCredit: function(credit) {
      this.credit = credit;
    },

    /**
    * Get the field value
    * @return {Credit} 
    */
    getCredit: function() {
      return this.credit;
    },
    getMetaInfo: function(fieldName) {
      var curclass = this._class_;
      do {
        var fieldMetaInfo = curclass._meta_.fields[fieldName];
        if(fieldMetaInfo) {
          return fieldMetaInfo;
        }
        curclass = curclass.superclass;
      } while(curclass);
      return null;
    },

    toString: function() {
      return JSON.stringify(this);
    }

  });

Transaction._meta_ =  {fields:  {}};
Transaction._meta_.fields["createdTime"] = {};
Transaction._meta_.fields["createdTime"].type = Number;
Transaction._meta_.fields["clientCreatedTime"] = {};
Transaction._meta_.fields["clientCreatedTime"].type = Number;
Transaction._meta_.fields["payment"] = {};
Transaction._meta_.fields["payment"].type = payments_Payment;
Transaction._meta_.fields["refund"] = {};
Transaction._meta_.fields["refund"].type = payments_Refund;
Transaction._meta_.fields["credit"] = {};
Transaction._meta_.fields["credit"].type = payments_Credit;

//
// Expose the module.
//
if ('undefined' !== typeof module) {
module.exports = Transaction;
}

