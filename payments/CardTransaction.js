/**
 * Autogenerated by Avro
 * 
 * DO NOT EDIT DIRECTLY
 */

// Prototype.js required
require("prototype");
var payments_CardType = require("../payments/CardType");
var payments_CardTransactionState = require("../payments/CardTransactionState");
var base_Reference = require("../base/Reference");
var payments_CardEntryType = require("../payments/CardEntryType");
var payments_CardTransactionType = require("../payments/CardTransactionType");
var payments_AVSResult = require("../payments/AVSResult");

  /**
  * @constructor
  */
  CardTransaction = Class.create( {
    /**
    * Initialize the values for this.
    * @private
    */
    initialize: function() {
      this._class_ = CardTransaction;
      this.paymentRef = undefined;
      this.creditRef = undefined;
      this.cardType = undefined;
      this.entryType = undefined;
      this.first6 = undefined;
      this.last4 = undefined;
      this.type = undefined;
      this.authCode = undefined;
      this.referenceId = undefined;
      this.transactionNo = undefined;
      this.state = undefined;
      this.extra = undefined;
      this.begBalance = undefined;
      this.endBalance = undefined;
      this.avsResult = undefined;
      this.cardholderName = undefined;
      this.token = undefined;
    },

    /**
    * Set the field value
    * The payment with which the card transaction is associated
    *
    * @param {Null|Reference} paymentRef 
    */
    setPaymentRef: function(paymentRef) {
      this.paymentRef = paymentRef;
    },

    /**
    * Get the field value
    * The payment with which the card transaction is associated
      * @return {Null|Reference} 
    */
    getPaymentRef: function() {
      return this.paymentRef;
    },

    /**
    * Set the field value
    * The credit with which the card transaction is associated
    *
    * @param {Null|Reference} creditRef 
    */
    setCreditRef: function(creditRef) {
      this.creditRef = creditRef;
    },

    /**
    * Get the field value
    * The credit with which the card transaction is associated
      * @return {Null|Reference} 
    */
    getCreditRef: function() {
      return this.creditRef;
    },

    /**
    * Set the field value
    * @param {CardType} cardType 
    */
    setCardType: function(cardType) {
      this.cardType = cardType;
    },

    /**
    * Get the field value
    * @return {CardType} 
    */
    getCardType: function() {
      return this.cardType;
    },

    /**
    * Set the field value
    * @param {CardEntryType} entryType 
    */
    setEntryType: function(entryType) {
      this.entryType = entryType;
    },

    /**
    * Get the field value
    * @return {CardEntryType} 
    */
    getEntryType: function() {
      return this.entryType;
    },

    /**
    * Set the field value
    * The first four digits of the card number
    *
    * @param {String} first6 
    */
    setFirst6: function(first6) {
      this.first6 = first6;
    },

    /**
    * Get the field value
    * The first four digits of the card number
      * @return {String} 
    */
    getFirst6: function() {
      return this.first6;
    },

    /**
    * Set the field value
    * The last four digits of the card number
    *
    * @param {String} last4 
    */
    setLast4: function(last4) {
      this.last4 = last4;
    },

    /**
    * Get the field value
    * The last four digits of the card number
      * @return {String} 
    */
    getLast4: function() {
      return this.last4;
    },

    /**
    * Set the field value
    * @param {CardTransactionType} type 
    */
    setType: function(type) {
      this.type = type;
    },

    /**
    * Get the field value
    * @return {CardTransactionType} 
    */
    getType: function() {
      return this.type;
    },

    /**
    * Set the field value
    * Authorization code (if successful)
    *
    * @param {String} authCode 
    */
    setAuthCode: function(authCode) {
      this.authCode = authCode;
    },

    /**
    * Get the field value
    * Authorization code (if successful)
      * @return {String} 
    */
    getAuthCode: function() {
      return this.authCode;
    },

    /**
    * Set the field value
    * @param {String} referenceId 
    */
    setReferenceId: function(referenceId) {
      this.referenceId = referenceId;
    },

    /**
    * Get the field value
    * @return {String} 
    */
    getReferenceId: function() {
      return this.referenceId;
    },

    /**
    * Set the field value
    * @param {String} transactionNo 
    */
    setTransactionNo: function(transactionNo) {
      this.transactionNo = transactionNo;
    },

    /**
    * Get the field value
    * @return {String} 
    */
    getTransactionNo: function() {
      return this.transactionNo;
    },

    /**
    * Set the field value
    * @param {CardTransactionState} state 
    */
    setState: function(state) {
      this.state = state;
    },

    /**
    * Get the field value
    * @return {CardTransactionState} 
    */
    getState: function() {
      return this.state;
    },

    /**
    * Set the field value
    * Extra info to be stored as part of gateway/card transaction
    *
    * @param {Object.<String,String>} extra A map of <String> to <>
    */
    setExtra: function(extra) {
      this.extra = extra;
    },

    /**
    * Get the field value
    * Extra info to be stored as part of gateway/card transaction
      * @return {Object.<String,String>} A map of <String> to <>
    */
    getExtra: function() {
      return this.extra;
    },

    /**
    * Set the field value
    * @param {Number|Null} begBalance must be a long integer, 
    */
    setBegBalance: function(begBalance) {
      this.begBalance = begBalance;
    },

    /**
    * Get the field value
    * @return {Number|Null} must be a long integer, 
    */
    getBegBalance: function() {
      return this.begBalance;
    },

    /**
    * Set the field value
    * @param {Number|Null} endBalance must be a long integer, 
    */
    setEndBalance: function(endBalance) {
      this.endBalance = endBalance;
    },

    /**
    * Get the field value
    * @return {Number|Null} must be a long integer, 
    */
    getEndBalance: function() {
      return this.endBalance;
    },

    /**
    * Set the field value
    * @param {AVSResult} avsResult 
    */
    setAvsResult: function(avsResult) {
      this.avsResult = avsResult;
    },

    /**
    * Get the field value
    * @return {AVSResult} 
    */
    getAvsResult: function() {
      return this.avsResult;
    },

    /**
    * Set the field value
    * @param {String} cardholderName 
    */
    setCardholderName: function(cardholderName) {
      this.cardholderName = cardholderName;
    },

    /**
    * Get the field value
    * @return {String} 
    */
    getCardholderName: function() {
      return this.cardholderName;
    },

    /**
    * Set the field value
    * @param {String} token 
    */
    setToken: function(token) {
      this.token = token;
    },

    /**
    * Get the field value
    * @return {String} 
    */
    getToken: function() {
      return this.token;
    },
    getMetaInfo: function(fieldName) {
      var curclass = this._class_;
      do {
        var fieldMetaInfo = curclass._meta_.fields[fieldName];
        if(fieldMetaInfo) {
          return fieldMetaInfo;
        }
        curclass = curclass.superclass;
      } while(curclass);
      return null;
    },

    toString: function() {
      return JSON.stringify(this);
    }

  });

CardTransaction._meta_ =  {fields:  {}};
CardTransaction._meta_.fields["paymentRef"] = {};
CardTransaction._meta_.fields["paymentRef"].type = base_Reference;
CardTransaction._meta_.fields["creditRef"] = {};
CardTransaction._meta_.fields["creditRef"].type = base_Reference;
CardTransaction._meta_.fields["cardType"] = {};
CardTransaction._meta_.fields["cardType"].type = payments_CardType;
CardTransaction._meta_.fields["entryType"] = {};
CardTransaction._meta_.fields["entryType"].type = payments_CardEntryType;
CardTransaction._meta_.fields["first6"] = {};
CardTransaction._meta_.fields["first6"].type = String;
CardTransaction._meta_.fields["last4"] = {};
CardTransaction._meta_.fields["last4"].type = String;
CardTransaction._meta_.fields["type"] = {};
CardTransaction._meta_.fields["type"].type = payments_CardTransactionType;
CardTransaction._meta_.fields["authCode"] = {};
CardTransaction._meta_.fields["authCode"].type = String;
CardTransaction._meta_.fields["referenceId"] = {};
CardTransaction._meta_.fields["referenceId"].type = String;
CardTransaction._meta_.fields["transactionNo"] = {};
CardTransaction._meta_.fields["transactionNo"].type = String;
CardTransaction._meta_.fields["state"] = {};
CardTransaction._meta_.fields["state"].type = payments_CardTransactionState;
CardTransaction._meta_.fields["extra"] = {};
CardTransaction._meta_.fields["extra"].type = Object;
CardTransaction._meta_.fields["begBalance"] = {};
CardTransaction._meta_.fields["begBalance"].type = Number;
CardTransaction._meta_.fields["endBalance"] = {};
CardTransaction._meta_.fields["endBalance"].type = Number;
CardTransaction._meta_.fields["avsResult"] = {};
CardTransaction._meta_.fields["avsResult"].type = payments_AVSResult;
CardTransaction._meta_.fields["cardholderName"] = {};
CardTransaction._meta_.fields["cardholderName"].type = String;
CardTransaction._meta_.fields["token"] = {};
CardTransaction._meta_.fields["token"].type = String;

//
// Expose the module.
//
if ('undefined' !== typeof module) {
module.exports = CardTransaction;
}

