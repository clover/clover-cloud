/**
 * Autogenerated by Avro
 * 
 * DO NOT EDIT DIRECTLY
 */

var Class = require("../Class.js");
var base_Reference = require("../base/Reference");

  /**
  * @constructor
  * @memberof payments
  */
  PaymentTaxRate = Class.create( {
    /**
    * Initialize the values for this.
    * @memberof payments.PaymentTaxRate
    * @private
    */
    initialize: function() {
      this._class_ = PaymentTaxRate;
      this.id = undefined;
      this.paymentRef = undefined;
      this.name = undefined;
      this.rate = undefined;
      this.isDefault = undefined;
      this.taxableAmount = undefined;
    },

    /**
    * Set the field value
    * @memberof payments.PaymentTaxRate
    * @param {String} id 
    */
    setId: function(id) {
      this.id = id;
    },

    /**
    * Get the field value
    * @memberof payments.PaymentTaxRate
    * @return {String} 
    */
    getId: function() {
      return this.id;
    },

    /**
    * Set the field value
    * The payment with which the payment tax rate is associated
    *
    * @memberof payments.PaymentTaxRate
    * @param {base.Reference} paymentRef 
    */
    setPaymentRef: function(paymentRef) {
      this.paymentRef = paymentRef;
    },

    /**
    * Get the field value
    * The payment with which the payment tax rate is associated
    * @memberof payments.PaymentTaxRate
    * @return {base.Reference} 
    */
    getPaymentRef: function() {
      return this.paymentRef;
    },

    /**
    * Set the field value
    * @memberof payments.PaymentTaxRate
    * @param {String} name 
    */
    setName: function(name) {
      this.name = name;
    },

    /**
    * Get the field value
    * @memberof payments.PaymentTaxRate
    * @return {String} 
    */
    getName: function() {
      return this.name;
    },

    /**
    * Set the field value
    * @memberof payments.PaymentTaxRate
    * @param {Number} rate must be a long integer
    */
    setRate: function(rate) {
      this.rate = rate;
    },

    /**
    * Get the field value
    * @memberof payments.PaymentTaxRate
    * @return {Number} must be a long integer
    */
    getRate: function() {
      return this.rate;
    },

    /**
    * Set the field value
    * @memberof payments.PaymentTaxRate
    * @param {Boolean} isDefault 
    */
    setIsDefault: function(isDefault) {
      this.isDefault = isDefault;
    },

    /**
    * Get the field value
    * @memberof payments.PaymentTaxRate
    * @return {Boolean} 
    */
    getIsDefault: function() {
      return this.isDefault;
    },

    /**
    * Set the field value
    * @memberof payments.PaymentTaxRate
    * @param {Number} taxableAmount must be a long integer
    */
    setTaxableAmount: function(taxableAmount) {
      this.taxableAmount = taxableAmount;
    },

    /**
    * Get the field value
    * @memberof payments.PaymentTaxRate
    * @return {Number} must be a long integer
    */
    getTaxableAmount: function() {
      return this.taxableAmount;
    },

    /**
    * @memberof payments.PaymentTaxRate
    * @private
    */
    getMetaInfo: function(fieldName) {
      var curclass = this._class_;
      do {
        var fieldMetaInfo = curclass._meta_.fields[fieldName];
        if(fieldMetaInfo) {
          return fieldMetaInfo;
        }
        curclass = curclass.superclass;
      } while(curclass);
      return null;
    },

    toString: function() {
      return JSON.stringify(this);
    }

  });

PaymentTaxRate._meta_ =  {fields:  {}};
PaymentTaxRate._meta_.fields["id"] = {};
PaymentTaxRate._meta_.fields["id"].type = String;
PaymentTaxRate._meta_.fields["paymentRef"] = {};
PaymentTaxRate._meta_.fields["paymentRef"].type = base_Reference;
PaymentTaxRate._meta_.fields["name"] = {};
PaymentTaxRate._meta_.fields["name"].type = String;
PaymentTaxRate._meta_.fields["rate"] = {};
PaymentTaxRate._meta_.fields["rate"].type = Number;
PaymentTaxRate._meta_.fields["isDefault"] = {};
PaymentTaxRate._meta_.fields["isDefault"].type = Boolean;
PaymentTaxRate._meta_.fields["taxableAmount"] = {};
PaymentTaxRate._meta_.fields["taxableAmount"].type = Number;

//
// Expose the module.
//
if ('undefined' !== typeof module) {
module.exports = PaymentTaxRate;
}

