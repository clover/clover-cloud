/**
 * Autogenerated by Avro
 * 
 * DO NOT EDIT DIRECTLY
 */

// Prototype.js required
require("prototype");
var customers_Customer = require("../customers/Customer");
var payments_CardTransaction = require("../payments/CardTransaction");
var payments_TaxableAmountRate = require("../payments/TaxableAmountRate");
var base_Reference = require("../base/Reference");
var base_Tender = require("../base/Tender");

  /**
  * @constructor
  */
  Credit = Class.create( {
    /**
    * Initialize the values for this.
    * @private
    */
    initialize: function() {
      this._class_ = Credit;
      this.id = undefined;
      this.orderRef = undefined;
      this.device = undefined;
      this.tender = undefined;
      this.employee = undefined;
      this.customers = undefined;
      this.amount = undefined;
      this.taxAmount = undefined;
      this.taxRates = undefined;
      this.createdTime = undefined;
      this.clientCreatedTime = undefined;
      this.cardTransaction = undefined;
      this.voided = undefined;
      this.voidReason = undefined;
    },

    /**
    * Set the field value
    * Unique identifier
    *
    * @param {String} id 
    */
    setId: function(id) {
      this.id = id;
    },

    /**
    * Get the field value
    * Unique identifier
      * @return {String} 
    */
    getId: function() {
      return this.id;
    },

    /**
    * Set the field value
    * The order with which the credit is associated
    *
    * @param {Reference} orderRef 
    */
    setOrderRef: function(orderRef) {
      this.orderRef = orderRef;
    },

    /**
    * Get the field value
    * The order with which the credit is associated
      * @return {Reference} 
    */
    getOrderRef: function() {
      return this.orderRef;
    },

    /**
    * Set the field value
    * Device which processed this credit
    *
    * @param {Reference|Null} device 
    */
    setDevice: function(device) {
      this.device = device;
    },

    /**
    * Get the field value
    * Device which processed this credit
      * @return {Reference|Null} 
    */
    getDevice: function() {
      return this.device;
    },

    /**
    * Set the field value
    * The tender type associated with this payment, e.g. credit card, cash, etc.
    *
    * @param {Tender} tender 
    */
    setTender: function(tender) {
      this.tender = tender;
    },

    /**
    * Get the field value
    * The tender type associated with this payment, e.g. credit card, cash, etc.
      * @return {Tender} 
    */
    getTender: function() {
      return this.tender;
    },

    /**
    * Set the field value
    * The employee who processed the payment
    *
    * @param {Reference} employee 
    */
    setEmployee: function(employee) {
      this.employee = employee;
    },

    /**
    * Get the field value
    * The employee who processed the payment
      * @return {Reference} 
    */
    getEmployee: function() {
      return this.employee;
    },

    /**
    * Set the field value
    * Customer who received the credit/refund
    *
    * @param {Customer} customers 
    */
    setCustomers: function(customers) {
      this.customers = customers;
    },

    /**
    * Get the field value
    * Customer who received the credit/refund
      * @return {Customer} 
    */
    getCustomers: function() {
      return this.customers;
    },

    /**
    * Set the field value
    * Amount paid
    *
    * @param {Number} amount must be a long integer
    */
    setAmount: function(amount) {
      this.amount = amount;
    },

    /**
    * Get the field value
    * Amount paid
      * @return {Number} must be a long integer
    */
    getAmount: function() {
      return this.amount;
    },

    /**
    * Set the field value
    * Amount paid in tax
    *
    * @param {Number|Null} taxAmount must be a long integer, 
    */
    setTaxAmount: function(taxAmount) {
      this.taxAmount = taxAmount;
    },

    /**
    * Get the field value
    * Amount paid in tax
      * @return {Number|Null} must be a long integer, 
    */
    getTaxAmount: function() {
      return this.taxAmount;
    },

    /**
    * Set the field value
    * @param {Array.<TaxableAmountRate>} taxRates An array of 
    */
    setTaxRates: function(taxRates) {
      this.taxRates = taxRates;
    },

    /**
    * Get the field value
    * @return {Array.<TaxableAmountRate>} An array of 
    */
    getTaxRates: function() {
      return this.taxRates;
    },

    /**
    * Set the field value
    * Time payment was recorded on server
    *
    * @param {Number} createdTime must be a long integer
    */
    setCreatedTime: function(createdTime) {
      this.createdTime = createdTime;
    },

    /**
    * Get the field value
    * Time payment was recorded on server
      * @return {Number} must be a long integer
    */
    getCreatedTime: function() {
      return this.createdTime;
    },

    /**
    * Set the field value
    * @param {Number} clientCreatedTime must be a long integer
    */
    setClientCreatedTime: function(clientCreatedTime) {
      this.clientCreatedTime = clientCreatedTime;
    },

    /**
    * Get the field value
    * @return {Number} must be a long integer
    */
    getClientCreatedTime: function() {
      return this.clientCreatedTime;
    },

    /**
    * Set the field value
    * Information about the card used for credit/debit card payments
    *
    * @param {CardTransaction} cardTransaction 
    */
    setCardTransaction: function(cardTransaction) {
      this.cardTransaction = cardTransaction;
    },

    /**
    * Get the field value
    * Information about the card used for credit/debit card payments
      * @return {CardTransaction} 
    */
    getCardTransaction: function() {
      return this.cardTransaction;
    },

    /**
    * Set the field value
    * @param {Boolean} voided 
    */
    setVoided: function(voided) {
      this.voided = voided;
    },

    /**
    * Get the field value
    * @return {Boolean} 
    */
    getVoided: function() {
      return this.voided;
    },

    /**
    * Set the field value
    * @param {String} voidReason 
    */
    setVoidReason: function(voidReason) {
      this.voidReason = voidReason;
    },

    /**
    * Get the field value
    * @return {String} 
    */
    getVoidReason: function() {
      return this.voidReason;
    },
    getMetaInfo: function(fieldName) {
      var curclass = this._class_;
      do {
        var fieldMetaInfo = curclass._meta_.fields[fieldName];
        if(fieldMetaInfo) {
          return fieldMetaInfo;
        }
        curclass = curclass.superclass;
      } while(curclass);
      return null;
    },

    toString: function() {
      return JSON.stringify(this);
    }

  });

Credit._meta_ =  {fields:  {}};
Credit._meta_.fields["id"] = {};
Credit._meta_.fields["id"].type = String;
Credit._meta_.fields["orderRef"] = {};
Credit._meta_.fields["orderRef"].type = base_Reference;
Credit._meta_.fields["device"] = {};
Credit._meta_.fields["device"].type = base_Reference;
Credit._meta_.fields["tender"] = {};
Credit._meta_.fields["tender"].type = base_Tender;
Credit._meta_.fields["employee"] = {};
Credit._meta_.fields["employee"].type = base_Reference;
Credit._meta_.fields["customers"] = {};
Credit._meta_.fields["customers"].type = customers_Customer;
Credit._meta_.fields["amount"] = {};
Credit._meta_.fields["amount"].type = Number;
Credit._meta_.fields["taxAmount"] = {};
Credit._meta_.fields["taxAmount"].type = Number;
Credit._meta_.fields["taxRates"] = {};
Credit._meta_.fields["taxRates"].type = Array;
Credit._meta_.fields["taxRates"].elementType = payments_TaxableAmountRate;
Credit._meta_.fields["createdTime"] = {};
Credit._meta_.fields["createdTime"].type = Number;
Credit._meta_.fields["clientCreatedTime"] = {};
Credit._meta_.fields["clientCreatedTime"].type = Number;
Credit._meta_.fields["cardTransaction"] = {};
Credit._meta_.fields["cardTransaction"].type = payments_CardTransaction;
Credit._meta_.fields["voided"] = {};
Credit._meta_.fields["voided"].type = Boolean;
Credit._meta_.fields["voidReason"] = {};
Credit._meta_.fields["voidReason"].type = String;

//
// Expose the module.
//
if ('undefined' !== typeof module) {
module.exports = Credit;
}

